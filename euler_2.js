/*
Link: https://projecteuler.net/problem=2
Problem: 
	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
		1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

Solution: 
	I found an equation that I think generates all the even numbers in the Fibonacci Sequence. I have not proven this yet but I think
	it is true. The rest is writing a recursive function that addes the even number and stops at 4000000
*/

/*
	This return the even numbers in the fibonacci sequence
*/
function get_n(n_1, n_2){
  return n_1*4+n_2;
}

function calculate(max){
	// We start the sequence with 2 and 8 and the first 2 numbers
	var n_1 = 8; // last number in the sequence
	var n_2 = 2; // second to last number in sequence;

	var n = 0; // this is the next number in the sequence
	var sum = 10; //start with 8+2 = 10

	while(n <= max){
		n = get_n(n_1, n_2);

    if (n > max) break; //The last iteration n will be bigger than the max, break
		sum += n;
		n_2 = n_1;
		n_1 = n;
	}
  
  return sum;
}

calculate(4000000);